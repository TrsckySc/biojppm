fast:
    db:
      #开启多源配置 true, 如果为false 则会获取默认 default 配置数据库
      muti-datasource-open: false
      #多数据源名称列表，多个用逗号隔开， 使用方法：@DataSource(name="db1")
      datasourceNames: db1#,db2,db3
    redis:
      #是否开启redis 内存数据库 <*推荐使用*> true
      enabled: true
    #是否演示模式
    demoMode: false 
    #是否开启HTTPS false 则以server:port
    ssl:
       enabled: false   
spring:
    datasource:
           #默认(主)数据库配置
           default:
              driverClassName: com.mysql.cj.jdbc.Driver
              url: jdbc:mysql://127.0.0.1:3306/fastdb?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
              username: fast
              password: fast@123$
              filters: wall,mergeStat
           ###############从数据库配置  
           db1:
             driverClassName: 
             #从数据库是否开启
             enabled: false
             url: 
             username: 
             password: 
             filters: 
           #db2:
           #  driverClassName: 
           #  #从数据库是否开启
           #  enabled: false
           #  url: 
           #  username: 
           #  password: 
           #  filters:  
           #db3:
           #  driverClassName: 
           #  #从数据库是否开启
           #  enabled: false
           #  url: 
           #  username: 
           #  password: 
           #  filters:   
    #redis数据库服务器         
    redis:   
        database: 9
        host: 127.0.0.01
        port: 6379
        password:      # 密码
        timeout: 6000ms  # 连接超时时长（毫秒）
        jedis:
            pool:
                max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
                max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
                max-idle: 10      # 连接池中的最大空闲连接
                min-idle: 5       # 连接池中的最小空闲连接
                
                
mybatis-plus:
            #实体扫描，多个package用逗号或者分号分隔
            type-aliases-package: com.fast.*.*.entity
            #打印sql语句,调试用
            #configuration:
            #   log-impl: org.apache.ibatis.logging.stdout.StdOutImpl    
http:
     port:  # 普通转发端口
server:
     name: '##################Fast云系统OS[生产环境]##############'
     projectName: 'FAST云系统[生产环境]'
     port: 8080 #HTTPS端口