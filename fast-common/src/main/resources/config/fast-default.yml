###---------------------------------------------------------------------------------##
#### J2eeFAST 系统核心默认YML文件,此文件不建议修改.若要修改请拷贝到在admin模块中YML文件覆盖  ####
###---------------------------------------------------------------------------------##

# 产品或项目名称
productName: J2eeFAST 开源版本

# ¢此版本号最好不要改动、有助于你后期维修解决问题都会用到当前版本¢
version: 2.6.0

server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
    #设置表单提交数据最大大小,解决头像base64太大问题
    max-http-form-post-size: 20MB
    #如果使用Nginx反向代理, 获取真实IP 需要开启
    remote-ip-header: X-Forwarded-For
    protocol-header: X-Forwarded-Proto
    port-header: X-Forwarded-Port
  #如果使用Nginx反向代理, 获取真实IP 需要开启
  use-forward-headers: false
  # 当 Nginx 为 https，tomcat 为 http 时，设置该选项为 true
  schemeHttps: fasle
  #########################################
  servlet:
    context-path: /fast
  #Tomcat SSL Https 访问配置
  #ssl:
  #   key-store: classpath:
  #   key-store-type: PKCS12
  #   key-store-password: ''
  #开启springBoot 对输出页面进行压缩
  compression:
    enabled: true
    mime-types: 'application/javascript,text/css,application/json,application/xml,text/html,text/xml,text/plain'

spring:
  main:
    #是否打印LOGO log 打印到日志, console 打印控制台, off 关闭
    banner-mode: log
  servlet:
    multipart:   #设置上传文件大小
      max-file-size: 200MB  #单个文件的大小
      max-request-size: 200MB  #单次请求的文件的总大小
      enabled: true
  freemarker:
    suffix: .html
    request-context-attribute: request
    #cache: true

  #redis数据库服务器
  redis:
    timeout: 6000ms  # 连接超时时长（毫秒
    jedis:
       pool:
          max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
          max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 10      # 连接池中的最大空闲连接
          min-idle: 5       # 连接池中的最小空闲连接

  #消息队列
  rabbitmq:
    virtual-host: /
    # 是否启用发布者确认 具体确认回调实现见代码
    publisher-confirms: true
    # 是否启用发布者返回 具体返回回调实现见代码
    publisher-returns: true
    # 是否启用强制消息 保证消息的有效监听
    template.mandatory: true
    #消费端配置
    listener:
      simple:
        #消费端
        concurrency: 5
        #最大消费端数
        max-concurrency: 10
        #自动签收auto  手动 manual
        acknowledge-mode: manual
        #限流（海量数据，同时只能过来一条）
        prefetch: 1
  # 定时任务是否自动建表配置 如果想自己收到创建 请找到 org.quartz.impl.jdbcjobstore 包下(quartz-**.jar 定时任务JAR包) 有对应的数据库 sql 文件自行手动创建
  quartz:
    #数据库方式
    job-store-type: jdbc
    jdbc:
      #initialize-schema: always 初始化删除 qrtz_ 表 重新创建
      #initialize-schema: never 初始化不创建
      initialize-schema: never

#登录安全验证基本配置
aj:
  captcha:
    #redis 缓存 本地缓存 local
    cache-type: redis
    #local缓存的阈值,达到这个值，清除缓存
    cache-number: 1000
    #定时清除过期缓存(单位秒),设置为0代表不执行
    timing-clear: 1800
    #blockPuzzle 滑块 clickWord 文字点选  default默认两者都实例化
    type: blockPuzzle
    #右下角显示字
    water-mark: J2eeFAST
    water-font: 宋体
    font-type: 宋体
    #校验滑动拼图允许误差偏移量(默认5像素)
    slip-offset: 5
    #aes加密坐标开启或者禁用(true|false)
    aes-status: true
    #滑动干扰项(0/1/2)
    interference-options: 2
    #滑动验证，底图路径，不配置将使用默认图片
    ##支持全路径
    ##支持项目路径,以classpath:开头,取resource目录下路径,例：classpath:images/jigsaw
    jigsaw: classpath:config/aj/images/jigsaw
    pic-click: classpath:config/aj/images/pic-click

# Shiro 相关配置
shiro:
  ## V2.6.1 以上版本 ---------
  #登录地址
  loginUrl: /login
  #登录成功地址
  successUrl: /index
  #是否隐藏登录页面-后台登录页面不容易发现
  isHideLoginUrl: false
  #是否允许刷新主框架页，如果设置为 true，刷新主页将导致重新登录。如安全性比较高的，如银行个人首页不允许刷新。
  isAllowRefreshIndex: false
  ## ------------------
  cookie:
    # 设置Cookie的域名 默认空，即当前访问的域名
    domain: ~
    # 设置HttpOnly属性
    httpOnly: true
    # 设置Cookie的过期时间，天为单位
    maxAge: 30
  session:
    # Session超时时间，-1代表永不过期（默认30分钟）
    expireTime: 30
    #设置session失效的扫描时间, 清理用户直接关闭浏览器造成的孤立会话 (默认设置5分钟)
    validationTime: 5
    #设置浏览器sessionId名称
    sessionId: 'fast.session.id'
    #踢出之前登录的/之后登录的用户，默认踢出之前登录的用户
    kickoutAfter: true
  rememberMe:
    # 是否开启记住我
    enabled: false
    # 若开启记住我请设置记住我密钥 可以在 com.j2eefast.test.EncondeTest 测试类 执行getShiroDeskey单元测试方法 获取项目唯一密钥
    # 若不设置，则每次启动系统后自动随机生成一个新秘钥，这样会导致每次重启后，客户端记录的用户信息将失效。
    cipherKey: ~
  # 系统登录密钥对 可以在 com.j2eefast.test.EncondeTest 测试类 执行getLoginKey单元测试方法 获取密钥对
  #  若不设置 系统每次启动自动生成一对一个新的密钥对, 如果不考虑 均衡负载 无需设置、让系统自动生成安全可靠
  sysKey:
    pubKey: ~
    priKey: ~
  cors:
    #是否开启跨域访问
    enabled: false
    #设置允许跨域的路径
    urlPatterns: /*
    #设置允许跨域请求的域名 * 所有域名都可以访问
    allowedOrigins: "*"
    #设置允许的方法
    allowedMethods: 'GET,POST,DELETE,PUT'
    #设置允许的header属性
    allowedHeaders: 'content-type,x-requested-with,ajax,token,Authorization,authorization'
    #跨域允许时间
    maxAge: 3600
    #允许携带信息头
    credentials: true
  #是否允许嵌入到外部网站iframe中 (true 允许, false 不允许)
  selfIframe:
    enabled: false

#mybatis 配置
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  # 0 防止全表更新与删除 1 防止全部删除 2 防止全部更新
  blockattack: 0
  global-config:
    banner: false
    db-config:
      #全局逻辑删除的实体字段名,配置后可以忽略实体字段的@TableLogic 注解
      #logic-delete-field: delFlag
      #逻辑删除值
      logic-delete-value: '1'
      #逻辑未删除值
      logic-not-delete-value: '0'
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: ASSIGN_ID
      #驼峰下划线转换
      table_underline: true
      #数据库大写下划线转换
      capital-mode: false
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    call-setters-on-nulls: true

########################License认证相关#####################
#License相关配置
license:
  #主题
  subject: fastOS
  #公钥别称
  publicAlias: j2eefastCert
  #访问公钥的密码
  storePass: j2eefast.com
  #license位置 如果不是绝对地址 则会找项目资源路径
  licensePath: license/license.lic
  #公钥位置 如果不是绝对地址 则会找项目资源路径
  publicKeysStorePath: license/publicCerts.keystore

  ######生成许可证书信息 *此信息应当绝对保密 正式项目应该分离单独存放用于生成许证书*  你可以屏蔽############
  #私钥库别名
  privateAlias:
  #私钥库密码
  keyPass:
  #私钥库路径
  privateKeysStorePath:
########################License认证相关#####################

fast:
  #工作流是否开启 如果工作流开启 必须开启 rabbitmq消息队列 否则系统人员 与 角色同步就会有异常
  flowable:
    enabled: false
  #是否演示模式
  demoMode:
    enabled: false
    #配置拦截规则
    post: 'edit,del,remove,clean,updateAvatar,previewData,saveReportFile,updateUser,saveReportFile,deleteReportFile,add,resetPwd,updatePass,genCode,uploadLic,status,insertAuthRoles,changeStatus,insertAuthUsers,cancel,upload'
    get: 'del,remove,clean,dirTreeData'
    urlPatterns: '/sys/*,/tool/*,/file/ueditor/*,/bpm/procdef/*,/bpm/model/*,/app/rest/models,/bpm/processInstance/*,/gen/test/*,/sys/comm/*,/ureport/*'
    ip:
  #是否开启HTTPS false 则以server:port
  ssl:
    enabled: false
  #是否开启ureport2报表功能
  ureport:
    enabled: false
    mysql:
      provider:
         prefix: fast-
         disabled: false
  #配置文件yml文件中敏感数据加密key /*注意 数据加密安全性其实是相对的,什么加密如果私钥或者key泄露都是无用,这个世界上没有一种加密方法是绝对安全的。
  #这种加密方法只能做到：防君子不防小人*/
  #此参数可以配置可以不配置,如果不配置则自动获取系统key,或者使用环境变量方式储存，使用启动命令方式,建议不配置key 让系统自己生成 因为系统是生成key是根居机器码,只有这台机器才能解密
  #需要加密的参数 DES{} 包裹 或者 SM4{} 包裹
  encrypt:
    key: '123456789'
  xss:
    # 过滤开关
    enabled: true
    # 排除链接（多个用逗号分隔）
    excludes: /sys/notice/*,/sys/database/add,/sys/msg/*,/sys/area/load,/tool/gen/*,/tool/gen/column/list
    # 匹配链接
    urlPatterns: /sys/*
  #是否开启csrf 防护,此开启针对需要系统授权所有的POST请求
  csrf:
    enabled: true
    #防盗链允许的网站来源地址配置多个URL , 分割
    #urlReferer: 'http:127.0.0.1, http:loclhost'
    # 排除链接（多个用逗号分隔）
    excludes: /ureport/*
  #JTA 分布式事务，建议启用多数据源的时候开启
  jta:
    enabled: false
  #是否数据库脚本字段升级
  updateDb:
    auto: false
  #是否开启多租户模式（SAAS模式）
  tenantModel:
    enabled: false
    #多租户需要略拼接多租户ID的表 多个表之间, 分割 注意大小写. 例如: 'sys_user,sys_comp'
    ignoreTable: ~
  messages:
    #是否开启前端切换
    enabled: false
    # 国际化资源文件路径
    basename: i18n/
    #默认语言（2.0.3+）
    defaultLocale: zh_CN

#web页面相关
web:
   view:
      #角色登录对应main主页 key 角色字符支持 | & 符号 value 相当于Controller控制器的指向路径
      #例如 'USER|DEPT': 'modules/demo/addrpert' 意思为登录用户为 USER 或者 DEPT 角色的用户 访问modules/demo/main0 首页、注意所有Key角色不能有重复
      roleMain: "{
                  'USER|DEPT|HR': 'modules/sys/demo/addrpert',
                  'ADMIN': 'main'
                  }"
     #     "{
     #       'Admin-LTE': 'login-Gitee'
     #     }"
     # 修改登录页面
      loginHtml: ~
   adapter:
      # 子系统 自定义HandlerInterceptorAdapter 适配器拦截器 添加配置 list map形式
      # 例如: {'lockHandlerInterceptorAdapter':'/**'}  key为适配器类, value 为拦截地址
      registry: ~
      # 是否打印全局响ResponseData应数据拦截日志此处用途在比较重要的或者特殊的交易api时开启
      # 在配合日志配置(com.j2eefast.common.core.listener.LicenseResponseBodyAdvice)指定输出到文件方便查看
      # urlPatterns 需要拦截的数据的url 例如 /api/app/** 系统就会打印出所有访问此匹配的url系统处理返回的数据都会打印
   response:
      enabled: false
      urlPatterns: /demo/testData/**
   #JS CSS 缓存时间(天)
   cacheTime: 25
   # 静态资源路径前缀，可做 CDN 加速优化
   staticPrefix: 'classpath:/static/'
#日志路径配置
logging:
    file:
        name: fast
        path: logs/